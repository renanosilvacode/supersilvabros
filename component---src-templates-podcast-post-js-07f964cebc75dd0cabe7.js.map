{"version":3,"file":"component---src-templates-podcast-post-js-07f964cebc75dd0cabe7.js","mappings":"gKAkEA,IAvDY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,OACP,yBACE,8BAASb,EAAOa,MADlB,KACkCb,MAAAA,OAAA,EAAAA,EAAQc,UAAW,KADrD,IAGE,qBAAGC,KAAI,yBAAyBZ,MAAAA,OAAA,EAAAA,EAAQa,UAAR,KAAhC,YAGA,qBAAGD,KAAI,0BAA0BZ,MAAAA,OAAA,EAAAA,EAAQc,WAAR,KAAjC,aAGA,qBAAGF,KAAI,2BAA2BZ,MAAAA,OAAA,EAAAA,EAAQe,YAAR,KAAlC,cAGA,qBAAGH,KAAI,yBAAyBZ,MAAAA,OAAA,EAAAA,EAAQgB,UAAR,KAAhC,gB,iFC4BV,UA9E4B,SAAC,GAAwB,IAAD,EAArBrB,EAAqB,EAArBA,KAAMsB,EAAe,EAAfA,SACnCC,QAAQC,IAAIxB,EAAMsB,GAClB,IAAMG,EAAKH,EAASI,SAASC,MAAM,KAAK,GAClCC,EAAO5B,EAAK6B,WAAWC,MAAM9B,EAAK6B,WAAWC,MAAMC,OAASN,GAC5DO,GAAY,UAAAhC,EAAKG,KAAKC,oBAAV,eAAwB6B,QAAxB,QACSjC,EAAnBkC,SAAmBlC,EAATmC,KAElB,OACE,gBAAC,IAAD,CAAQb,SAAUA,EAAUW,MAAOD,GACjC,gBAAC,IAAD,CACEC,MAAOL,EAAKK,MACZG,YAAaR,EAAKQ,aAAeR,EAAKS,UAExC,2BACE/B,UAAU,YACVgC,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYZ,EAAKK,OAC9B,yBAAIL,EAAKa,YAEX,2BACEC,wBAAyB,CAAEC,OAAQf,EAAKQ,aACxCI,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,+BACE,iCACO,qBAAGvB,KAAMW,EAAKgB,MAAd,0BAEP,mCACS,2BACP,yBAAOC,SAAS,WAAWC,SAAS,YAClC,0BAAQpC,IAAKkB,EAAKmB,WAAW,GAAGC,IAAKC,KAAK,cAD5C,kCAEiC,2BAFjC,QAGO,qBAAGhC,KAAMW,EAAKgB,MAAd,2BAGT,8B","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/podcast-post.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={[\"auto\", \"webp\", \"avif\"]}\r\n        src=\"../images/profile-pic.png\"\r\n        width={50}\r\n        height={50}\r\n        quality={95}\r\n        alt=\"Profile picture\"\r\n      />\r\n      {author?.name && (\r\n        <p>\r\n          <strong>{author.name}</strong> {author?.summary || null}\r\n          {` `}\r\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\r\n            Twitter!\r\n          </a>\r\n          <a href={`https://facebook.com/${social?.facebook || ``}`}>\r\n            Facebook!\r\n          </a>\r\n          <a href={`https://instagram.com/${social?.instagram || ``}`}>\r\n            Instagram!\r\n          </a>\r\n          <a href={`https://youtube.com/${social?.youtube || ``}`}>\r\n            Youtube!\r\n          </a>\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst PodcastPostTemplate = ({ data, location }) => {\r\n  console.log(data, location);\r\n  const ep = location.pathname.split('/')[2];\r\n  const post = data.podcastRss.items[data.podcastRss.items.length - ep];\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const { previous, next } = data\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo\r\n        title={post.title}\r\n        description={post.description || post.excerpt}\r\n      />\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.title}</h1>\r\n          <p>{post.published}</p>\r\n        </header>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.description }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        <hr />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n      <section>\r\n        <p>\r\n          Link <a href={post.link}> Link para o episódio</a>\r\n        </p>\r\n        <p>\r\n          Ouvir: <br />\r\n          <audio autoPlay=\"autoplay\" controls=\"controls\">\r\n            <source src={post.enclosures[0].url} type=\"audio/mp3\" />\r\n            seu navegador não suporta HTML5<br/>\r\n            Ouça <a href={post.link}> Link para o episódio</a>\r\n          </audio>\r\n        </p>\r\n        <p>\r\n        </p>\r\n\r\n        \r\n      </section>\r\n      {/* <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav> */}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default PodcastPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query PodcastPostBySlug(\r\n    $id: String!\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    podcastRss {\r\n      items {\r\n        title\r\n        description\r\n        author\r\n        published\r\n        itunes_episode\r\n        link\r\n        itunes_image {\r\n          href\r\n        }\r\n        enclosures {\r\n          url\r\n          length\r\n          type\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","twitter","facebook","instagram","youtube","location","console","log","ep","pathname","split","post","podcastRss","items","length","siteTitle","title","previous","next","description","excerpt","itemScope","itemType","itemProp","published","dangerouslySetInnerHTML","__html","link","autoPlay","controls","enclosures","url","type"],"sourceRoot":""}